__author__ = 'hannes'

"""
Given: Two DNA strings s and t (each of length at most 1 kbp).

Return: All locations of t as a substring of s.
"""

def find_motif(seq, motif):
    ret = []
    pos = 0
    while pos <= len(seq) - len(motif):
        pos = seq.find(motif, pos)
        if pos == -1:
            break
        # position of a symbol in a string
        # is the total number of symbols
        # found to its left, including itself
        pos += 1
        ret.append(pos)
    return ret

input = """
GGGTTACACACACGTTAAATGTTAAATATACACCGTTAAATGTTAAATGTGCTGTGACGTTAAATGAAGTTAAATAGTTAAATGGCGTTAAATCGGGTTAAATAACGTTAAATCGTTAAATTCTGTGTTAAATGTTAAATTGTTAAATGTTAAATTAGTTAAATGTTAAATGTTAAATGTTAAATCGGTCACGTTGGTTAAATCTGTTAAATGTTAAATGTTAAATGTTAAATTGAGCTGTTAAATCGAAGTTAAATAGGTTAAATGTTAAATAACTGTTAAATCGTTAAATGTTAAATGTTAAATGTTAAATGTTAAATCGTTAAATAGAGCGACGTTAAATAACCGTTAAATTGGTTAAATGTCGAGTTAAATCGGTTAAATTGCCTTAAGAGTGAGTTAAATGAGTTAAATGGTATGTTAAATGTCGTACCAGTTAAATGACTGGTTAAATGTTAAATACGTTAAATTTCCGTTAAATAGTTAAATCAAGTTTGTTAAATGTTAAATTGTTAAATCGTTAAATATATTCGTTAAATGTCAATGGTAGTTAAATGTTAAATGTTAAATAAAGGTTAAATAAGTTAAATGGGTTAAATTAACATGAAGCTCGTTAAATAGTTAAATGAAGTTAAATTAAAAAGATCCGGTTAAATCAGTTAAATGTGTTAAATGGAACGTTAAATGAAGTTAAATAGTTAAATTGTTAAATACATAGCAACTGTTAAATCATGGAGTTAAATGACGTTAAATGTTAAATATAAAAGTTAAATATCGTTAAATTAGTTAAATCTGCGTTAAATCGTTAAATGTTAAATTCAGAGTTAAATCTGTTAAATGCAGTTAAATTTAAGTTAAATTGTTAAATGACGACATTGTGCGTTAAATCTGGTTAAATGTTAAATGTTAAAT
GTTAAATGT
"""
seq, motif = input.strip().split("\n")
ret = find_motif(seq, motif)


print(str(ret).strip('[]').replace(',', ''))